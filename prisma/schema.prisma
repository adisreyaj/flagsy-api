generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  firstName    String
  lastName     String
  password     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  environments Environment[]
  projects     Project[]
  features     Feature[]
}

model Project {
  id           String        @id @default(cuid())
  key          String
  name         String
  description  String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  owner        User          @relation(fields: [ownerId], references: [id])
  ownerId      String
  environments Environment[]
  Feature      Feature[]

  @@unique([key, ownerId])
}

model Environment {
  id        String                     @id @default(cuid())
  key       String
  name      String
  project   Project                    @relation(fields: [projectId], references: [id])
  projectId String
  owner     User                       @relation(fields: [ownerId], references: [id])
  ownerId   String
  createdAt DateTime                   @default(now())
  updatedAt DateTime                   @updatedAt
  features  FeatureEnvironmentConfig[]

  @@unique([key, projectId, ownerId])
}

model Feature {
  id                   String                     @id @default(cuid())
  key                  String
  type                 FeatureValueType
  value                Json
  description          String?
  project              Project                    @relation(fields: [projectId], references: [id])
  projectId            String
  owner                User                       @relation(fields: [ownerId], references: [id])
  ownerId              String
  createdAt            DateTime                   @default(now())
  updatedAt            DateTime                   @updatedAt
  environmentOverrides FeatureEnvironmentConfig[]

  @@unique([key, projectId, ownerId])
}

model FeatureEnvironmentConfig {
  feature       Feature     @relation(fields: [featureId], references: [id])
  featureId     String
  environment   Environment @relation(fields: [environmentId], references: [id])
  environmentId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  value         Json

  @@id([environmentId, featureId])
}

enum FeatureValueType {
  BOOLEAN
  NUMBER
  STRING
  JSON
}
