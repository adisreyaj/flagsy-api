generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  firstName    String
  lastName     String
  password     String
  role         Role          @default(ADMIN)
  environments Environment[]
  projects     Project[]
  features     Feature[]
  orgs         Org[]

  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  featureChangeLogs FeatureChangeLog[]
}

model Org {
  id           String        @id @default(cuid())
  name         String
  key          String
  members      User[]
  projects     Project[]
  environments Environment[]
  features     Feature[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id          String  @id @default(cuid())
  key         String
  name        String
  description String?

  org   Org    @relation(fields: [orgId], references: [id])
  orgId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String

  environments Environment[]
  features     Feature[]

  @@unique([key, orgId])
}

model Environment {
  id       String                     @id @default(cuid())
  key      String
  name     String
  features FeatureEnvironmentConfig[]

  project   Project @relation(fields: [projectId], references: [id])
  projectId String

  org   Org    @relation(fields: [orgId], references: [id])
  orgId String

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String

  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  featureChangeLogs FeatureChangeLog[]

  @@unique([key, projectId, orgId])
}

model Feature {
  id                   String                     @id @default(cuid())
  key                  String
  type                 FeatureValueType
  value                Json
  description          String?
  environmentOverrides FeatureEnvironmentConfig[]

  project   Project @relation(fields: [projectId], references: [id])
  projectId String

  org   Org    @relation(fields: [orgId], references: [id])
  orgId String

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String

  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  featureChangeLogs FeatureChangeLog[]

  @@unique([key, projectId, orgId])
}

model FeatureEnvironmentConfig {
  value Json

  feature   Feature @relation(fields: [featureId], references: [id], onDelete: Cascade)
  featureId String

  environment   Environment @relation(fields: [environmentId], references: [id], onDelete: Cascade)
  environmentId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([environmentId, featureId])
}

model FeatureChangeLog {
  id            String       @id @default(cuid())
  feature       Feature?     @relation(fields: [featureId], references: [id], onDelete: SetNull)
  featureId     String?
  environment   Environment? @relation(fields: [environmentId], references: [id], onDelete: SetNull)
  environmentId String?
  change        Json
  owner         User         @relation(fields: [ownerId], references: [id])
  ownerId       String

  createdAt DateTime @default(now())
}

enum FeatureValueType {
  BOOLEAN
  NUMBER
  STRING
  JSON
}

enum Role {
  ADMIN
  USER
}
